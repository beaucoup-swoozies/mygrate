// Generated by CoffeeScript 1.6.3
(function() {
  var argv, command, commands, fn, pkg, showUsage;

  commands = require('../lib/commands');

  pkg = require('../package.json');

  argv = require("minimist")(process.argv.slice(2), {
    alias: {
      version: "V",
      help: "h"
    }
  });

  command = argv._[0];

  showUsage = function() {
    return console.log("\nUsage: mygrate [options] [command]\n\nCommands:\n\n  createdb      Create database from config.js and $NODE_ENV\n\n  down          Undo {COUNT|VERSION|all} migrations.\n      # rollback 3 migrations\n      mygrate down 3\n      # rollback before specified version\n      mygrate down 201204261323-people\n      # rollback all\n      mygrate down all\n\n  file          Execute SQL script in file\n\n  history       Show deployed migrations\n\n  init          Creates migration directory with skeleton config.\n      mygrate init {postgresql|mysql}\n\n  new           Generate new migration.\n      #creates migrations/TIMESTAMP-add-tags/{down,up}.sql\n      mygrate new add-tags\n\n  up [options]  Execute new migrations.\n\nOptions:\n\n  -h, --help    output usage information\n  -V, --version output the version number");
  };

  if (process.argv.length === 2) {
    commands.history();
  } else if (argv.help) {
    showUsage();
  } else if (argv.version) {
    console.log(pkg.name + " " + pkg.version);
  } else if (command) {
    commands = {
      console: commands.console,
      createdb: commands.createDatabase,
      down: commands.migrateDown,
      file: commands.execFile,
      history: commands.history,
      init: commands.init,
      "new": commands.generate,
      "up": commands.migrateUp
    };
    fn = commands[command];
    if (fn) {
      fn(argv);
    } else {
      showUsage();
    }
  } else {
    showUsage();
  }

}).call(this);
